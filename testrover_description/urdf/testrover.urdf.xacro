<?xml version="1.0"?>
<robot name="testrover" xmlns:xacro="http://www.ros.org/wiki/xacro">
<!--
    A simple test rover for learning and testing xacro and rover software.
    Four identical wheels on a chassis, no suspension. Intended to be driven
    by the differential_drive controller and its approximation of skid
    steering.

    Uses the dimensions, masses, and qualities of the RMP440 LE
    Source: https://1l3kf73dl0pg27adzc3ob3r9-wpengine.netdna-ssl.com/wp-content/uploads/2014/09/RMP-440-LE-V3-Manual.pdf
-->

    <!-- Load the Gazebo-ROS Control interface -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <!--<robotNamespace>/testrover</robotNamespace>-->
        </plugin>
    </gazebo>

    <!-- Define the kinect -->
    <xacro:include filename="$(find testrover_description)/urdf/macros/accessories/kinect.urdf.xacro" />

    <!-- Macro detailing the reactions of each wheel -->
    <xacro:include filename="$(find testrover_description)/urdf/macros/components/wheel.urdf.xacro" />

    <xacro:property name="PI" value="3.1415926535897931" />

    <!-- All dimensions in SI units (kg, m, etc.)-->

    <!-- Chassis dimensions -->
    <xacro:property name="chassis_length" value=".972"/>
    <xacro:property name="chassis_width" value=".36"/>
    <xacro:property name="chassis_height" value=".329"/>
    <xacro:property name="chassis_mass" value="118.092"/>

    <!-- Wheel dimensions -->
    <xacro:property name="wheel_radius" value=".2667"/>
    <xacro:property name="wheel_depth" value=".168415"/>
    <xacro:property name="wheel_mass" value="4.0"/>

    <!-- Wheel positioning -->
    <xacro:property name="wheel_depth" value="0.168415"/>
    <xacro:property name="wheel_spacing_x" value="0.2858748"/>
    <xacro:property name="wheel_spacing_y" value="0.33675"/>

    <!-- Camera location -->
    <xacro:property name="camera_mnt_x" value="${(-.025+chassis_length)/2}"/>
    <xacro:property name="camera_mnt_y" value="0.0"/>
    <xacro:property name="camera_mnt_z" value="${(.027+chassis_height)/2}"/>

    <!-- Create base_link for central robot chassis -->
    <link name="base_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${chassis_mass}"/>
            <inertia ixx="1.25" ixy="0.0" ixz="0.0"
                     iyy="7.0" iyz="0.0" izz="8.0" />
        </inertial>
    </link>

    <!-- Declare the wheels and their origins -->
    <xacro:wheel prefix="front_left" parent="base_link">
        <origin xyz="${wheel_spacing_x} ${wheel_spacing_y} 0.0" rpy="0 0 0"/>
    </xacro:wheel>

    <xacro:wheel prefix="rear_left" parent="base_link">
        <origin xyz="${-wheel_spacing_x} ${wheel_spacing_y} 0.0" rpy="0 0 0"/>
    </xacro:wheel>

    <xacro:wheel prefix="front_right" parent="base_link">
        <origin xyz="${wheel_spacing_x} ${-wheel_spacing_y} 0.0" rpy="0 0 0"/>
    </xacro:wheel>

    <xacro:wheel prefix="rear_right" parent="base_link">
        <origin xyz="${-wheel_spacing_x} ${-wheel_spacing_y} 0.0" rpy="0 0 0"/>
    </xacro:wheel>

    <xacro:kinect parent="base_link">\
        <origin xyz="${camera_mnt_x} ${camera_mnt_y} ${camera_mnt_z}" rpy="0 0 0"/>
    </xacro:kinect>

</robot>